@startuml
skinparam dpi 200

participant "Main Program Thread" as main_thread
participant "Node Thread" as node_thread
participant "Thread Pool" as thread_pool

main_thread->main_thread: Create Node instance

create node_thread
main_thread->node_thread: Initialize Node (Node.init)

activate node_thread
node_thread->node_thread: Connect to network and subscribe to messages

create thread_pool
node_thread->thread_pool: Create handler thread pool
thread_pool->thread_pool: Wait for work (message)
activate thread_pool

node_thread-->main_thread: Node Init complete

group while not(node_shutdown)
	node_thread->node_thread: Listen for requests
	activate node_thread
	]-->node_thread: Message from external node
	node_thread->node_thread: Message received
	deactivate node_thread
	
  node_thread-->thread_pool: Message
  activate thread_pool
  thread_pool->thread_pool: Perform PBFT exchange
  hnote over thread_pool: Delay for PBFT
  thread_pool->thread_pool: Commit result to local table
  thread_pool-->node_thread: Result
  deactivate thread_pool
	
end

main_thread->node_thread: Shutdown Node
node_thread->thread_pool: Shutdown threads
destroy thread_pool
node_thread->main_thread: Shutdown complete
destroy node_thread

@enduml